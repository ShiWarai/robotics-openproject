version: "3.8"

services:

  robotics_openproject_backend:
    container_name: robotics_openproject_backend
    build: ./docker/backend
    volumes:
      - gems:/usr/local/lib/
      - builds:/root
      - sources:/robotics-openproject
    environment:
      DB_URL: postgresql://openproject:${DB_PASSWORD}@172.20.0.2/openproject
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
    networks:
      backend:
        ipv4_address: 172.20.0.3
    depends_on:
      robotics_openproject_builder:
        condition: "service_completed_successfully"

  robotics_openproject_frontend:
    container_name: robotics_openproject_frontend
    build: ./docker/frontend
    volumes:
      - builds:/root
      - sources:/robotics-openproject
    ports:
      - 4200:4200
    environment:
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
    networks:
      backend:
    depends_on:
      robotics_openproject_builder:
        condition: "service_completed_successfully"

  robotics_openproject_worker:
    container_name: robotics_openproject_worker
    build: ./docker/worker
    volumes:
      - builds:/root
      - sources:/robotics-openproject
    environment:
      DB_URL: postgresql://openproject:${DB_PASSWORD}@172.20.0.2/openproject
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
    networks:
      backend:
    depends_on:
      robotics_openproject_builder:
        condition: "service_completed_successfully"

  robotics_openproject_builder:
    container_name: robotics_openproject_builder
    build: ./docker/builder
    volumes:
      - builds:/root:rw
      - sources:/robotics-openproject:rw
    environment:
      DB_URL: postgresql://openproject:${DB_PASSWORD}@172.20.0.2/openproject
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
    networks:
      backend:
    depends_on:
      robotics_openproject_db:
        condition: "service_healthy"
  
  robotics_openproject_db:
    container_name: robotics_openproject_db
    image: postgres:12.11
    ports:
      - 5432:5432
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.2
    environment:
      POSTGRES_DB: "openproject"
      POSTGRES_USER: "openproject"
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  builds:
    name: robotics_openproject_builds
    external: false
  sources:
    name: robotics_openproject_sources
    external: false
  gems:
    name: robotics_openproject_gems
    external: false

networks:
  backend:
    ipam:
      config:
        - subnet: 172.20.0.0/24
